import threading
import queue  # Add this line to import the 'queue' module
import random
import time
import sys

def generator_thread():
    while True:
        value = random.randint(1, 100)
        print(f"Generated: {value}")
        if value % 2 == 0:
            even_queue.put(value)
        else:
            odd_queue.put(value)
        time.sleep(1)

def square_thread():
    while True:
        value = even_queue.get()
        square_value = value ** 2
        print(f"Square: {square_value}")
        even_queue.task_done()

def cube_thread():
    while True:
        value = odd_queue.get()
        cube_value = value ** 3
        print(f"Cube: {cube_value}")
        odd_queue.task_done()

# Queue to communicate between generator_thread and square_thread
even_queue = queue.Queue()

# Queue to communicate between generator_thread and cube_thread
odd_queue = queue.Queue()

# Create threads
generator = threading.Thread(target=generator_thread, daemon=True)
square = threading.Thread(target=square_thread, daemon=True)
cube = threading.Thread(target=cube_thread, daemon=True)

# Start threads
generator.start()
square.start()
cube.start()

# Keep the main thread alive
try:
    while True:
        time.sleep(1)
except KeyboardInterrupt:
    print("Program terminated.")
    sys.exit()
